# -*- coding: utf-8 -*-
"""Automobiles_Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ECWGp7baFUxmKAYkc5wAtGj5w_ip6sum
"""

# Team 1
# Hari Hara Sudhan

import numpy as np
import pandas as pd
import seaborn as sns
from matplotlib import pyplot as plt
from google.colab import files

url = "https://raw.githubusercontent.com/hari-19/EDA_Hackathon_3GIRPS/master/Automobile_Dataset.csv"
df = pd.read_csv(url)

df.describe()

df.head()

df.shape

df.symboling.unique()

df.normalized_losses.unique()

df = df.replace("?",None)
df["normalized_losses"] = df["normalized_losses"].replace('?',np.NaN)

df['normalized_losses'] = df['normalized_losses'].astype("float64")
df['stroke'] = df['stroke'].astype("float64")
df['horsepower'] = df['horsepower'].astype("float64")
df['peak_rpm'] = df['peak_rpm'].astype("int64")
df['price'] = df['price'].astype("float64")

df["normalized_losses"] = df["normalized_losses"].replace(np.NaN,0)
df["normalized_losses"] = df["normalized_losses"].replace(0,df.mean().normalized_losses)

df

df.info()

df.describe()

df.info()

plt.subplots(figsize=(20,15))
sns.heatmap(df.corr(),annot=True)
plt.show()

odf = df.copy()
odf

df.make.unique()

makeDict  = {
    'alfa-romero' : 0,
    'audi' : 1, 
    'bmw' : 2,
    'chevrolet' : 3, 
    'dodge' : 4, 
    'honda' : 5,
    'isuzu' : 6,
    'jaguar' : 7, 
    'mazda' : 8, 
    'mercedes-benz' : 9, 
    'mercury' : 10,
    'mitsubishi' : 11,
    'nissan' : 12, 
    'peugot' : 13, 
    'plymouth' : 14, 
    'porsche' : 15,
    'renault' : 16,
    'saab' : 17,
    'subaru' : 18,
    'toyota' : 19,
    'volkswagen' : 20,
    'volvo' : 21
}

df.make = [makeDict[item] for item in df.make]

df.fuel_type.unique()

fuel_typeDict = {
    'gas' : 0,
    'diesel' : 1
}

df.fuel_type = [fuel_typeDict[item] for item in df.fuel_type]

df.aspiration.unique()

aspirationDict = {
    'std' : 0,
    'turbo' : 1 
}

df.aspiration = [aspirationDict[item] for item in df.aspiration]

df.num_of_doors.unique()

num_of_doorsDict = {
    'two' : 2,
    'four' : 4
}

df.num_of_doors = [num_of_doorsDict[item] for item in df.num_of_doors]
odf.num_of_doors = [num_of_doorsDict[item] for item in odf.num_of_doors]

df.body_style.unique()

body_styleDict={
    'convertible' : 0,
    'hatchback' : 1,
    'sedan' : 2,
    'wagon' :3,
    'hardtop' :4
}

df.body_style = [body_styleDict[item] for item in df.body_style]

df.drive_wheels.unique()

drive_wheelsDict = {'rwd' : 0,
                    'fwd' : 1,
                    '4wd' : 2}

df.drive_wheels = [drive_wheelsDict[item] for item in df.drive_wheels]

df.engine_location.unique()

engine_locationDict={
    'front' : 0,
    'rear' : 1
}

df.engine_location = [engine_locationDict[item] for item in df.engine_location]

df.engine_type.unique()

engine_typeDict = {'dohc' : 0,
                   'ohcv' : 1,
                   'ohc' : 2,
                   'l' : 3,
                   'rotor' : 4,
                   'ohcf' : 5,
                   'dohcv' : 6}

df.engine_type = [engine_typeDict[item] for item in df.engine_type]

df.num_of_cylinders.unique()

num_of_cylindersDict = {
    'four' : 4,
    'six' : 6,
    'five' : 5,
    'three' : 3,
    'twelve' : 12,
    'two' : 2,
    'eight' :8
}

df.num_of_cylinders = [num_of_cylindersDict[item] for item in df.num_of_cylinders]
odf["num_of_cylinders"] = [num_of_cylindersDict[item] for item in odf.num_of_cylinders]

df.fuel_system.unique()

fuel_systemDict = {
    'mpfi' : 0,
    '2bbl' : 1,
    'mfi' : 2,
    '1bbl' : 3,
    'spfi' : 4,
    '4bbl' : 5,
    'idi' : 6,
    'spdi' : 7
}

df.fuel_system = [fuel_systemDict[item] for item in df.fuel_system]

df.corr()

plt.subplots(figsize=(20,15))
sns.heatmap(odf.corr(),annot=True)
plt.show()

odf

#result = odf["make", 'price'].aggregate(np.median).sort_values('price')


fig_dims = (15,10)
fig, ax = plt.subplots(figsize = fig_dims)

plt.title("Analysis of Brands")
plt.xlabel("Brand")
plt.ylabel("Price")
plt.xticks(rotation = 45)
sns.barplot(odf.make,df.price,ax = ax,errwidth=1)
plt.show()



#change_width(g, 5)
# plt.bar([inv_makeDict[item] for item in df.make], df.price,1)

fig_dims = (60,10)
fig, ax = plt.subplots(figsize = fig_dims)
plt.show()

fig_dims = (25,1)
fig, ax = plt.subplots(figsize = fig_dims)
plt.title("Price - Box Plot")
sns.boxplot(df.price, ax = ax)
plt.show()

fig_dims = (10,1)
fig, ax = plt.subplots(figsize = fig_dims)
plt.title("Horse Power - Box Plot")
sns.boxplot(df.horsepower, ax = ax)
plt.show()

fig_dims = (10,1)
fig, ax = plt.subplots(figsize = fig_dims)
plt.title("Curb Weight - Box Plot")
sns.boxplot(df.curb_weight, ax = ax)
plt.show()

fig_dims = (10,1)
fig, ax = plt.subplots(figsize = fig_dims)
plt.title("Engine Size - Box Plot")
sns.boxplot(df.engine_size, ax = ax)
plt.show()

fig_dims = (10,1)
fig, ax = plt.subplots(figsize = fig_dims)
plt.title("Peak RPM - Box Plot")
sns.boxplot(df.peak_rpm, ax = ax)
plt.show()

# g = sns.pairplot(odf, palette="husl")
#g.savefig("PairPlot.jpg")
#files.download("PairPlot.jpg")

fig_dims = (15,10)
fig, ax = plt.subplots(figsize = fig_dims)
sns.scatterplot(df.price, df.city_mpg, ax =ax)
sns.scatterplot(df.price, df.highway_mpg, ax = ax)
plt.xlabel("Price")
plt.ylabel("Overall miles per Gallon")
plt.title("Variation of mileage upon Price")
plt.show()

sns.catplot(x = 'price', y ='make', hue= 'engine_type', data=odf, kind="bar", errwidth=0,height = 13, aspect=0.5)
plt.title("Engine type used by brands based on price")
plt.show()

sns.barplot(x = 'engine_type', y = 'city_mpg', data=odf, errwidth=0.5)
plt.title("Mileage versus Engine Type")
plt.xlabel("Engine Type")
plt.ylabel("Mileage(City Miles per Gallon)")
plt.savefig("Z.jpg")
plt.show()

corrdf = odf.corr()

row = corrdf.iloc[16]
row = row.drop(labels="price")
row.plot(kind='bar')
plt.xlabel("Factors")
plt.ylabel("Correlation with Price (Scale : -1 to +1)")
plt.title("Correlation of Factors with Price")
plt.show()

fig_dims = (15,10)
fig, ax = plt.subplots(figsize = fig_dims)
sns.scatterplot(odf.horsepower,odf.price,ax = ax)
plt.title("Horsepower versus Price")
plt.show()